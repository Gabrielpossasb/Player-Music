{"version":3,"sources":["assets/sample4.mp3","Player.js","App.js"],"names":["module","exports","Player","props","View","style","styles","player","TouchableOpacity","onPress","a","async","newIndex","audioIndex","musicas","length","setAudioIndex","curFile","file","newMusic","filter","val","k","playing","audio","unloadAsync","curAudio","Audio","Sound","loadAsync","playAsync","setAudio","setMusicas","setPlaying","handleBack","marginRight","marginLeft","AntDesign","name","size","color","pauseAsync","handlePlay","handleNext","StyleSheet","create","width","height","position","bottom","left","zIndex","backgroundColor","alignItems","justifyContent","flexDirection","App","LogBox","ignoreAllLogs","useState","nomme","artista","require","changeMusic","id","flex","ScrollView","container","StatusBar","auto","header","Text","textAlign","fontSize","borderRadius","padding","table","map","paddingBottom","borderBottomColor","borderBottomWidth"],"mappings":"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","file":"static/js/app.7d251473.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample4.cceecdd6.mp3\";","import { ScrollView, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { Audio } from 'expo-av';\r\nimport React, {useEfect, useState} from 'react';\r\nimport {AntDesign} from '@expo/vector-icons';\r\n\r\nexport default function Player(props) {\r\n\r\n    const handlePlay = async() => {\r\n        let curFile = props.musicas[props.audioIndex].file;\r\n\r\n        let newMusic = props.musicas.filter((val, k)=>{\r\n            if(props.audioIndex == k){\r\n              props.musicas[k].playing = true;\r\n              curFile = props.musicas[k].file;\r\n            } else {\r\n              props.musicas[k].playing = false;\r\n            }\r\n            return props.musicas[k];\r\n        })\r\n\r\n        try{\r\n            if(props.audio != null){\r\n                props.setPlaying(true);\r\n                props.setMusicas(newMusic);\r\n                await props.audio.playAsync();\r\n            }else{\r\n                let curAudio = new Audio.Sound();\r\n          \r\n                try{\r\n                    await curAudio.loadAsync(curFile);\r\n                    await curAudio.playAsync();\r\n                } catch(error) {}\r\n          \r\n                props.setAudio(curAudio);\r\n                props.setMusicas(newMusic);\r\n                props.setPlaying(true);\r\n            }\r\n        } catch(error){}\r\n    }\r\n\r\n    const handlePause = async() => {\r\n        if(props.audio != null){\r\n            props.audio.pauseAsync()\r\n        }\r\n        props.setPlaying(false);\r\n    }\r\n\r\n    const handleBack = async () => {\r\n        let newIndex = props.audioIndex - 1;\r\n        if(newIndex < 0){\r\n            newIndex = props.musicas.length - 1;\r\n        }\r\n        props.setAudioIndex(newIndex);\r\n\r\n        let curFile = props.musicas[newIndex].file;\r\n\r\n        let newMusic = props.musicas.filter((val, k)=>{\r\n            if(newIndex == k){\r\n              props.musicas[k].playing = true;\r\n              curFile = props.musicas[k].file;\r\n            } else {\r\n              props.musicas[k].playing = false;\r\n            }\r\n            return props.musicas[k];\r\n        })\r\n\r\n        \r\n        if(props.audio != null){\r\n            props.audio.unloadAsync();\r\n        }\r\n      \r\n        let curAudio = new Audio.Sound();\r\n      \r\n        try{\r\n            await curAudio.loadAsync(curFile);\r\n            await curAudio.playAsync();\r\n        }catch(error) {}\r\n      \r\n        props.setAudio(curAudio);\r\n        props.setMusicas(newMusic);\r\n        props.setPlaying(true);\r\n        \r\n    }\r\n\r\n    const handleNext = async () => {\r\n        let newIndex = props.audioIndex + 1;\r\n        if(newIndex >= props.musicas.length){\r\n            newIndex = 0;\r\n        }\r\n        props.setAudioIndex(newIndex);\r\n\r\n        let curFile = props.musicas[newIndex].file;\r\n\r\n        let newMusic = props.musicas.filter((val, k)=>{\r\n            if(newIndex == k){\r\n              props.musicas[k].playing = true;\r\n              curFile = props.musicas[k].file;\r\n            } else {\r\n              props.musicas[k].playing = false;\r\n            }\r\n            return props.musicas[k];\r\n        })\r\n\r\n        \r\n        if(props.audio != null){\r\n            props.audio.unloadAsync();\r\n        }\r\n      \r\n        let curAudio = new Audio.Sound();\r\n      \r\n        try{\r\n            await curAudio.loadAsync(curFile);\r\n            await curAudio.playAsync();\r\n        }catch(error) {}\r\n      \r\n        props.setAudio(curAudio);\r\n        props.setMusicas(newMusic);\r\n        props.setPlaying(true);\r\n    }\r\n\r\n    return(\r\n        <View style={styles.player}>\r\n            <TouchableOpacity onPress={()=> handleBack()} style={{marginRight:20, marginLeft:20}}>\r\n                <AntDesign name='banckward' size={35} color='white'/>\r\n            </TouchableOpacity>\r\n            {\r\n            (!props.playing)\r\n            ?\r\n                <TouchableOpacity onPress={() => handlePlay()} style={{marginRight:20, marginLeft:20}}>\r\n                    <AntDesign name='playcircleo' size={35} color='white'/>\r\n                </TouchableOpacity>\r\n            :\r\n                <TouchableOpacity onPress={() => handlePause()} style={{marginRight:20, marginLeft:20}}>\r\n                    <AntDesign name='pausecircleo' size={35} color='white'/>\r\n                </TouchableOpacity>\r\n            }\r\n            <TouchableOpacity onPress={()=> handleNext()} style={{marginRight:20, marginLeft:20}}>\r\n                <AntDesign name='forward' size={35} color='white'/>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    player: {\r\n        width:'100%',\r\n        height:100,\r\n        position:'absolute',\r\n        bottom:0,\r\n        left:0,\r\n        zIndex:99,\r\n        backgroundColor:'#111',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        flexDirection:'row'\r\n    }\r\n})","import { StatusBar } from 'expo-status-bar';\nimport { ScrollView, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { Audio } from 'expo-av';\nimport React, {useEfect, useState} from 'react';\nimport {AntDesign} from '@expo/vector-icons';\nimport Player from './Player';\nimport { LogBox } from 'react-native';\n\nexport default function App() {\n\nLogBox.ignoreAllLogs(true);\n\nconst [audioIndex, setAudioIndex] = useState(0);\n\nconst [playing, setPlaying] = useState(false);\n\nconst [audio, setAudio] = useState(null);\n\nconst [musicas, setMusicas] = useState([\n  {\n    nomme: 'eu',\n    artista: 'tu',\n    playing: false, \n    file: require('./assets/sample4.mp3'),\n  },\n  {\n    nomme: '1',\n    artista: '2',\n    playing: false, \n    file: require('./assets/sample4.mp3'),\n  },\n  {\n    nomme: 'a',\n    artista: 'b',\n    playing: false, \n    file: require('./assets/sample4.mp3'),\n  },\n  ]);\n\n  const changeMusic = async (id) =>{\n    let curFile = null;\n    let newMusic = musicas.filter((val, k)=>{\n      if(id == k){\n        musicas[k].playing = true;\n        curFile = musicas[k].file;\n        setPlaying(true);\n        setAudioIndex(id);\n      } else {\n        musicas[k].playing = false;\n      }\n      return musicas[k];\n    })\n    //fazer botao de pause aq mesmo\n    if(audio != null){\n      audio.unloadAsync();\n    }\n\n    let curAudio = new Audio.Sound();\n\n    try{\n      await curAudio.loadAsync(curFile);\n      await curAudio.playAsync();\n    }catch(error) {}\n\n    setAudio(curAudio);\n    setMusicas(newMusic);\n  }\n\n  return (\n    <View style={{flex:1}}>\n      <ScrollView style={styles.container}>\n        <StatusBar auto/>\n        <View style={styles.header}>\n          <Text style={{textAlign:'center', color:'white', fontSize:25, backgroundColor:'green', borderRadius:20, padding:8, width:'60%'}}>SPOTIFY</Text>\n        </View>\n\n        <View style={styles.table}>\n          <Text style={{width:'50%', color:'rgb(200,200,200)', textAlign:'center'}}>Musica</Text>\n          <Text style={{width:'50%', color:'rgb(200,200,200)', textAlign:'center'}}>Artista</Text>\n        </View>\n\n        {\n          musicas.map((val, k)=>{\n            if(val.playing){\n              return(\n                <View style={styles.table}>\n                  <TouchableOpacity onPress={()=> changeMusic(k)} style={{width:'100%', flexDirection: 'row'}}>\n                    <Text style={{width:'50%', color:'green'}}>\n                      <AntDesign name=\"pausecircle\" size={20} color=\"white\" />  {val.nomme}\n                    </Text>\n\n                    <Text style={{width:'50%', color:'green'}}>{val.artista}</Text>\n                  </TouchableOpacity>\n                </View>\n              );\n            }else {\n              return(\n                <View style={styles.table}>\n                  <TouchableOpacity onPress={()=> changeMusic(k)} style={{width:'100%', flexDirection: 'row'}}>\n                    <Text style={{width:'50%', color:'white'}}>\n                      <AntDesign name='play' size={20} color='white'/>  {val.nomme}\n                    </Text>\n\n                    <Text style={{width:'50%', color:'white'}}>{val.artista}</Text>\n                  </TouchableOpacity>\n                </View>\n              );\n            }\n          })\n        }\n        <View style={{paddingBottom:200}}></View>\n      </ScrollView>\n\n      <Player \n        playing={playing} setPlaying={setPlaying} \n        audioIndex={audioIndex} setAudioIndex={setAudioIndex}\n        musicas={musicas} setMusicas={setMusicas} \n        audio={audio} setAudio={setAudio}\n      ></Player>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#222',\n  },\n  header: {\n    backgroundColor:'rgb(20,20,20)',\n    alignItems:'center',\n    justifyContent:'center',\n    width:'100%',\n    height:'18%'\n  },  \n  table: {\n    flexDirection: 'row',\n    padding: 20,\n    borderBottomColor:'white',\n    borderBottomWidth:1\n  }\n});\n"],"sourceRoot":""}